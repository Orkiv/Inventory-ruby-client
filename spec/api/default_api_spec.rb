=begin
#InventoryAPI

#Orkiv Inventory API client 

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for InventoryClient::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = InventoryClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instact of DefaultApi' do
      expect(@instance).to be_instance_of(InventoryClient::DefaultApi)
    end
  end

  # unit tests for all_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<InventoryGroup>]
  describe 'all_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for categories_delete
  # 
  # 
  # @param id Id of category to remove
  # @param [Hash] opts the optional parameters
  # @return [Response]
  describe 'categories_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for categories_post
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Category] :query Category to query against system
  # @return [Array<Category>]
  describe 'categories_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for categories_put
  # 
  # If no ID is specified a new category will be created!
  # @param id category id to update.
  # @param category New category information.
  # @param [Hash] opts the optional parameters
  # @return [Category]
  describe 'categories_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for item_add_post
  # 
  # 
  # @param item Item to create.
  # @param [Hash] opts the optional parameters
  # @return [Item]
  describe 'item_add_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for item_addbulk_post
  # 
  # 
  # @param items Items to create.
  # @param [Hash] opts the optional parameters
  # @return [Response]
  describe 'item_addbulk_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for item_delete
  # 
  # 
  # @param id item id to remove
  # @param [Hash] opts the optional parameters
  # @return [Response]
  describe 'item_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for item_get
  # 
  # 
  # @param id Item ID to open.
  # @param [Hash] opts the optional parameters
  # @return [Item]
  describe 'item_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for item_media_delete
  # 
  # 
  # @param imageurl URL of image to remove
  # @param [Hash] opts the optional parameters
  # @return [Response]
  describe 'item_media_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for item_media_post
  # 
  # This endpoint is currently in testing.
  # @param id Valid item id to bind image to.
  # @param image Image.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'item_media_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for item_put
  # 
  # 
  # @param id item id to update.
  # @param item New item information.
  # @param [Hash] opts the optional parameters
  # @return [Response]
  describe 'item_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for items_count_post
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :minprice Min price of items to find
  # @option opts [Float] :maxprice Max price of items to find
  # @option opts [ItemRequest] :query Item to query against system.
  # @return [Float]
  describe 'items_count_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for items_post
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :minprice Min price of items to find
  # @option opts [Float] :maxprice Max price of items to find
  # @option opts [ItemRequest] :query Item to query against system.
  # @return [Array<Item>]
  describe 'items_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orders_post
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [OrderRequest] :query Order to query against item invoices.
  # @return [Array<Order>]
  describe 'orders_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orders_services_post
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [OrderRequest] :query Order to query against service invoices.
  # @return [Array<Order>]
  describe 'orders_services_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for query_post
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :page Current page index.
  # @option opts [String] :categoryid Get items under specified category id.
  # @option opts [String] :sort Comma delimited Sort string. ie ; +ordprice. Please use number based fields only
  # @option opts [String] :search Performs a regex pattern match against the items within your account
  # @option opts [Float] :minprice Min price in hundreds (cents).
  # @option opts [Float] :maxprice Max price in hundreds (cents).
  # @option opts [ItemRequest] :query Custom parameters to query against system.
  # @return [Array<Item>]
  describe 'query_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for services_delete
  # 
  # 
  # @param id ID of the service to update
  # @param [Hash] opts the optional parameters
  # @return [Response]
  describe 'services_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for services_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<Service>]
  describe 'services_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for services_open_get
  # 
  # 
  # @param id ID of service to open
  # @param [Hash] opts the optional parameters
  # @return [Service]
  describe 'services_open_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for services_post
  # 
  # 
  # @param service Service to create.
  # @param [Hash] opts the optional parameters
  # @return [Service]
  describe 'services_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for services_put
  # 
  # 
  # @param id ID of the service to update
  # @param service New service data to set.
  # @param [Hash] opts the optional parameters
  # @return [Response]
  describe 'services_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for variation_delete
  # 
  # 
  # @param id variation id to remove
  # @param [Hash] opts the optional parameters
  # @return [Response]
  describe 'variation_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for variation_get
  # 
  # 
  # @param id Variation ID to open.
  # @param [Hash] opts the optional parameters
  # @return [Variation]
  describe 'variation_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for variation_post
  # 
  # 
  # @param id Valid item id to bind variation to.
  # @param item Variation information.
  # @param [Hash] opts the optional parameters
  # @return [Response]
  describe 'variation_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for variation_put
  # 
  # 
  # @param id variation id to update.
  # @param item New variation information.
  # @param [Hash] opts the optional parameters
  # @return [Response]
  describe 'variation_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for write_delete
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id Will delete event attached to this serviceid
  # @return [Response]
  describe 'write_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for write_post
  # 
  # Will ovveride the current event of the specified service.
  # @param event_request Event to upload
  # @param [Hash] opts the optional parameters
  # @return [Response]
  describe 'write_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
